[project]
name = "exchange-rate-web-app"
version = "0.1.0"
description = "Web application for receiving exchange rates"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.15",
    "msgspec>=0.19.0",
    "python-dotenv>=1.1.1",
    "redis>=6.4.0",
]

[dependency-groups]
dev = [
    "aioresponses>=0.7.8",
    "coverage>=7.10.6",
    "fakeredis>=2.31.1",
]
lint = [
    "mypy>=1.17.1",
    "ruff>=0.12.11",
    "types-aiofiles>=24.1.0.20250822",
]

[project.scripts]
webapp = "src.main:main"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  '__pycache__',
]
fix = true
line-length = 120
indent-width = 4
lint.fixable = ["ALL"]
lint.ignore = [
    "SIM117",  # multiple-with-statements
    "COM812",  # missing-trailing-comma
    "D100",    # pydocstyle - missing docstring in public module
    "D101",    # pydocstyle - missing docstring in public class
    "D102",    # pydocstyle - missing docstring in public method
    "D103",    # pydocstyle - missing docstring in public function
    "D104",    # pydocstyle - missing docstring in public package
    "D105",    # pydocstyle - missing docstring in magic method
    "D106",    # pydocstyle - missing docstring in public nested class
    "D107",    # pydocstyle - missing docstring in __init__
    "TC001",   # Add quotes to type expression in typing.cast()
    "PT009",   # pytest-unittest-assertion
    "PT027",   # pytest-unittest-raises-assertion
]
lint.select = ["ALL"]
lint.extend-select = ["I"]
# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
src = ["src", "tests"]
target-version = "py312"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
mypy_path = "src"
exclude = [".venv"]
files = "**/*.py"
python_version = "3.12"
enable_error_code = ["ignore-without-code"]
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
implicit_reexport = false
plugins = []
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
